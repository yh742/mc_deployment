# Copyright 2016 Canonical Ltd.
#
# This file is part of the Snap layer for Juju.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"options":
  "snap_proxy":
    "description": "HTTP/HTTPS web proxy for Snappy to use when accessing the snap\
      \ store.\n"
    "type": "string"
    "default": ""
  "snap_proxy_url":
    "default": ""
    "type": "string"
    "description": "The address of a Snap Store Proxy to use for snaps e.g. http://snap-proxy.example.com\n"
  "snapd_refresh":
    "default": "max"
    "type": "string"
    "description": |
      How often snapd handles updates for installed snaps. Setting an empty
      string will check 4x per day. Set to "max" to delay the refresh as long
      as possible. You may also set a custom string as described in the
      'refresh.timer' section here:
        https://forum.snapcraft.io/t/system-options/87
  "nagios_context":
    "default": "juju"
    "type": "string"
    "description": |
      Used by the nrpe subordinate charms.
      A string that will be prepended to instance name to set the host name
      in nagios. So for instance the hostname would be something like:
          juju-myservice-0
      If you're running multiple environments with the same services in them
      this allows you to differentiate between them.
  "nagios_servicegroups":
    "default": ""
    "type": "string"
    "description": |
      A comma-separated list of nagios servicegroups.
      If left empty, the nagios_context will be used as the servicegroup
  "apt-key-server":
    "description": "APT Key Server"
    "type": "string"
    "default": "hkp://keyserver.ubuntu.com:80"
  "docker-opts":
    "type": "string"
    "default": ""
    "description": |
      Extra options to pass to the docker daemon. e.g. --insecure-registry
  "enable-cgroups":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      Enable GRUB cgroup overrides cgroup_enable=memory swapaccount=1. WARNING
      changing this option will reboot the host - use with caution on production
      services
  "docker_runtime":
    "type": "string"
    "default": "auto"
    "description": |
      docker runtime to install valid values are "upstream" (docker PPA), "nvidia" (nvidia PPA),
      "apt" (ubuntu archive), or "auto" (nvidia PPA or ubuntu archive, based on your hardware)
  "cuda_repo":
    "type": "string"
    "default": "10.0.130-1"
    "description": |
      The cuda-repo package version to install.
  "nvidia-docker-package":
    "type": "string"
    "default": "nvidia-docker2"
    "description": |
      The pinned version of nvidia-docker2 package.
  "nvidia-container-runtime-package":
    "type": "string"
    "default": "nvidia-container-runtime"
    "description": |
      The pinned version of nvidia-container-runtime package.
  "docker-ce-package":
    "type": "string"
    "default": "docker-ce"
    "description": |
      The pinned version of docker-ce package installed with nvidia-docker.
  "http_proxy":
    "type": "string"
    "default": ""
    "description": |
      URL to use for HTTP_PROXY to be used by Docker. Useful in
      egress-filtered environments where a proxy is the only option for
      accessing the registry to pull images.
  "https_proxy":
    "type": "string"
    "default": ""
    "description": |
      URL to use for HTTPS_PROXY to be used by Docker. Useful in
      egress-filtered environments where a proxy is the only option for
      accessing the registry to pull images.
  "no_proxy":
    "type": "string"
    "default": ""
    "description": |
      Comma-separated list of destinations (either domain names or IP
      addresses) which should be accessed directly, rather than through
      the proxy defined in http_proxy or https_proxy. Must be less than
      2023 characters long.
  "ingress":
    "type": "boolean"
    "default": !!bool "true"
    "description": |
      Deploy the default http backend and ingress controller to handle
      ingress requests.
  "labels":
    "type": "string"
    "default": ""
    "description": |
      Labels can be used to organize and to select subsets of nodes in the
      cluster. Declare node labels in key=value format, separated by spaces.
  "allow-privileged":
    "type": "string"
    "default": "true"
    "description": |
      Allow privileged containers to run on worker nodes. Supported values are
      "true", "false", and "auto". If "true", kubelet will run in privileged
      mode by default. If "false", kubelet will never run in privileged mode.
      If "auto", kubelet will not run in privileged mode by default, but will
      switch to privileged mode if gpu hardware is detected. Pod security
      policies (PSP) should be used to restrict container privileges.
  "channel":
    "type": "string"
    "default": "1.12/stable"
    "description": |
      Snap channel to install Kubernetes worker services from
  "require-manual-upgrade":
    "type": "boolean"
    "default": !!bool "true"
    "description": |
      When true, worker services will not be upgraded until the user triggers
      it manually by running the upgrade action.
  "kubelet-extra-args":
    "type": "string"
    "default": ""
    "description": |
      Space separated list of flags and key=value pairs that will be passed as arguments to
      kubelet. For example a value like this:
        runtime-config=batch/v2alpha1=true profiling=true
      will result in kube-apiserver being run with the following options:
        --runtime-config=batch/v2alpha1=true --profiling=true
      Note: As of Kubernetes 1.10.x, many of Kubelet's args have been deprecated, and can
      be set with kubelet-extra-config instead.
  "proxy-extra-args":
    "type": "string"
    "default": ""
    "description": |
      Space separated list of flags and key=value pairs that will be passed as arguments to
      kube-proxy. For example a value like this:
        runtime-config=batch/v2alpha1=true profiling=true
      will result in kube-apiserver being run with the following options:
        --runtime-config=batch/v2alpha1=true --profiling=true
  "docker-logins":
    "type": "string"
    "default": "[]"
    "description": |
      Docker login credentials. Setting this config allows Kubelet to pull images from
      registries where auth is required.

      The value for this config must be a JSON array of credential objects, like this:
        [{"server": "my.registry", "username": "myUser", "password": "myPass"}]
  "ingress-ssl-chain-completion":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      Enable chain completion for TLS certificates used by the nginx ingress
      controller.  Set this to true if you would like the ingress controller
      to attempt auto-retrieval of intermediate certificates.  The default
      (false) is recommended for all production kubernetes installations, and
      any environment which does not have outbound Internet access.
  "nginx-image":
    "type": "string"
    "default": "auto"
    "description": |
      Docker image to use for the nginx ingress controller. Auto will select an image
      based on architecture.
  "default-backend-image":
    "type": "string"
    "default": "auto"
    "description": |
      Docker image to use for the default backend. Auto will select an image
      based on architecture.
  "kubelet-extra-config":
    "default": "{}"
    "type": "string"
    "description": |
      Extra configuration to be passed to kubelet. Any values specified in this
      config will be merged into a KubeletConfiguration file that is passed to
      the kubelet service via the --config flag. This can be used to override
      values provided by the charm.

      Requires Kubernetes 1.10+.

      The value for this config must be a YAML mapping that can be safely
      merged with a KubeletConfiguration file. For example:
        {evictionHard: {memory.available: 200Mi}}

      For more information about KubeletConfiguration, see upstream docs:
      https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
